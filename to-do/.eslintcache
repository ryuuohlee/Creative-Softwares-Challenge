[{"/home/jeffreylee/Documents/codingChallenges/Creative-Softwares-Challenge/to-do/src/index.js":"1","/home/jeffreylee/Documents/codingChallenges/Creative-Softwares-Challenge/to-do/src/container/App/App.js":"2","/home/jeffreylee/Documents/codingChallenges/Creative-Softwares-Challenge/to-do/src/components/CurrentDate/CurrentDate.js":"3","/home/jeffreylee/Documents/codingChallenges/Creative-Softwares-Challenge/to-do/src/components/OpenTasks/OpenTasks.js":"4","/home/jeffreylee/Documents/codingChallenges/Creative-Softwares-Challenge/to-do/src/components/TaskList/TaskList.js":"5","/home/jeffreylee/Documents/codingChallenges/Creative-Softwares-Challenge/to-do/src/components/Task/Task.js":"6","/home/jeffreylee/Documents/codingChallenges/Creative-Softwares-Challenge/to-do/src/components/TaskModal/TaskModal.js":"7","/home/jeffreylee/Documents/codingChallenges/Creative-Softwares-Challenge/to-do/src/container/App/AppStyles.js":"8","/home/jeffreylee/Documents/codingChallenges/Creative-Softwares-Challenge/to-do/src/components/TaskList/TaskListStyle.js":"9","/home/jeffreylee/Documents/codingChallenges/Creative-Softwares-Challenge/to-do/src/components/CurrentDate/CurrentDateStyle.js":"10","/home/jeffreylee/Documents/codingChallenges/Creative-Softwares-Challenge/to-do/src/components/OpenTasks/OpenTaskStyle.js":"11","/home/jeffreylee/Documents/codingChallenges/Creative-Softwares-Challenge/to-do/src/components/Task/TaskStyle.js":"12","/home/jeffreylee/Documents/codingChallenges/Creative-Softwares-Challenge/to-do/src/components/TaskModal/TaskModalStyle.js":"13"},{"size":5912,"mtime":1611969820768,"results":"14","hashOfConfig":"15"},{"size":1859,"mtime":1611970463746,"results":"16","hashOfConfig":"15"},{"size":1374,"mtime":1611960369211,"results":"17","hashOfConfig":"15"},{"size":424,"mtime":1611959755380,"results":"18","hashOfConfig":"15"},{"size":2358,"mtime":1611967055968,"results":"19","hashOfConfig":"15"},{"size":2266,"mtime":1611968998809,"results":"20","hashOfConfig":"15"},{"size":2663,"mtime":1611957040593,"results":"21","hashOfConfig":"15"},{"size":579,"mtime":1611970310788,"results":"22","hashOfConfig":"15"},{"size":740,"mtime":1611967079034,"results":"23","hashOfConfig":"15"},{"size":969,"mtime":1611960393952,"results":"24","hashOfConfig":"15"},{"size":1146,"mtime":1611959853227,"results":"25","hashOfConfig":"15"},{"size":1564,"mtime":1611969707008,"results":"26","hashOfConfig":"15"},{"size":211,"mtime":1611953919728,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"bxrhd3",{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/home/jeffreylee/Documents/codingChallenges/Creative-Softwares-Challenge/to-do/src/index.js",[],"/home/jeffreylee/Documents/codingChallenges/Creative-Softwares-Challenge/to-do/src/container/App/App.js",["58"],"/home/jeffreylee/Documents/codingChallenges/Creative-Softwares-Challenge/to-do/src/components/CurrentDate/CurrentDate.js",[],["59","60"],"/home/jeffreylee/Documents/codingChallenges/Creative-Softwares-Challenge/to-do/src/components/OpenTasks/OpenTasks.js",[],"/home/jeffreylee/Documents/codingChallenges/Creative-Softwares-Challenge/to-do/src/components/TaskList/TaskList.js",["61"],"import React, { useState } from 'react';\nimport Task from '../Task/Task.js';\nimport TaskModal from '../TaskModal/TaskModal.js';\nimport Modal from 'react-modal';\nimport { ListContainer, AddTask, Add, List } from './TaskListStyle.js';\n\n\nconst TaskList = (props) => {\n  const { tasks, view, setTasks } = props;\n  const [modalIsOpen,setIsOpen] = useState(false);\n\n  //handle updating if completed or not\n  const handleUpdate = (status) => {\n\n  }\n\n  //Modal functions\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function closeModal(){\n    setIsOpen(false);\n  }\n\n  console.log(view)\n\n    return (\n      <ListContainer className=\"listContainer\">\n        <List className=\"list\">\n          {tasks.map(task => {\n            if(task.status !== view) return null;\n            return <Task\n                      date={task.date}\n                      priority={task.priority}\n                      status={task.status}\n                      task={task.task}\n                      key={task.task}\n                      tasks={tasks}\n                      setTasks={setTasks}\n                       />\n                    })\n          }\n        </List>\n        <AddTask className=\"addTask\">\n          <Add onClick={openModal}>+</Add>\n        </AddTask>\n        <Modal\n                appElement={document.getElementById('app')}\n                ariaHideApp={false}\n                isOpen={modalIsOpen}\n                onRequestClose={closeModal}\n                style={{\n                  overlay: {\n                    position: 'absolute',\n                    top: '0px',\n                    left: '0px',\n                    right: '0px',\n                    bottom: '0px',\n                    backgroundColor: 'rgba(0,0,0,0.5)',\n                  },\n                  content: {\n                    top: '50%',\n                    left: '50%',\n                    right: 'auto',\n                    bottom: 'auto',\n                    marginRight: '-50%',\n                    transform: 'translate(-50%, -50%)',\n                    height: '400px'\n                  }\n                }}\n                contentLabel=\"Task Entry\"\n              >\n                <button onClick={closeModal}>X</button>\n                <TaskModal tasks={tasks} setTasks={setTasks} closeModal={closeModal}/>\n        </Modal>\n      </ListContainer>\n    );\n}\n\nexport default TaskList;","/home/jeffreylee/Documents/codingChallenges/Creative-Softwares-Challenge/to-do/src/components/Task/Task.js",["62","63","64","65"],"import React, { useState } from 'react';\nimport { TaskContainer, Low, Medium, High, Stats, Priority, ProgressName, Label, PriorityStates, NotSelected } from './TaskStyle.js';\n\nconst Task = (props) => {\n  const { date, priority, status, task, tasks, setTasks } = props;\n  //const [progress, setProgress] = useState(status)\n  const [job, setJob] = useState({\n    date: date,\n    priority: priority,\n    status: status,\n    task: task\n  })\n\n    return (\n      <TaskContainer className=\"Tasks\">\n        <Stats className=\"stats\">\n          <ProgressName className=\"progressName\">\n            <div className=\"classState\">\n              { status === false ?\n                <input\n                  type=\"checkbox\"\n                  value={status}\n                  // onChange={handleProgress}\n                />\n                :\n                <input\n                  type=\"checkbox\"\n                  value={task.status}\n                  // onChange={handleProgress}\n                  defaultChecked\n                />}\n            </div>\n            <Label className=\"classLabel\">\n              {task}\n            </Label>\n          </ProgressName>\n          <div className=\"classLabel\">\n            {date}\n          </div>\n        </Stats>\n        <PriorityStates>\n          {priority==='Low' ?\n            <Priority className=\"priority\">\n              <Low>Low</Low>\n              <NotSelected>Medium</NotSelected>\n              <NotSelected>High</NotSelected>\n            </Priority>\n            : (priority==='Medium' ?\n            <Priority className=\"priority\">\n              <NotSelected>Low</NotSelected>\n              <Medium>Medium</Medium>\n              <NotSelected>High</NotSelected>\n            </Priority>\n            : (priority==='High'?\n            <Priority className=\"priority\">\n              <NotSelected>Low</NotSelected>\n              <NotSelected>Medium</NotSelected>\n              <High>High</High>\n            </Priority>\n            :\n            <Priority className=\"priority\">\n              <NotSelected>Low</NotSelected>\n              <NotSelected>Medium</NotSelected>\n              <NotSelected>High</NotSelected>\n            </Priority>\n             ))}\n        </PriorityStates>\n      </TaskContainer>\n    );\n}\n\nexport default Task;","/home/jeffreylee/Documents/codingChallenges/Creative-Softwares-Challenge/to-do/src/components/TaskModal/TaskModal.js",["66","67","68","69","70"],"import React, { useState, useRef } from 'react';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { ModalContainer, Form, TaskData } from './TaskModalStyle.js';\n\nconst TaskModal = (props) => {\n  console.log(props)\n  const { tasks, setTasks, closeModal } = props;\n  const [taskTitle, setTaskTitle] = useState('');\n  const [date, setDate] = useState('');\n  const [priority, setPriority] = useState('');\n  const [calIsOpen, setCalOpen] = useState(false);\n  const calButtonRef = useRef();\n  const calRef = useRef()\n  const [startDate, setStartDate] = useState(new Date())\n\n\n  const handleTaskTitle = (event) => {\n    setTaskTitle(event.target.value)\n  }\n\n  const handleDueDate = (select) => {\n    const dateData = select.toString().split(' ');\n    setDate(`${dateData[1]} ${dateData[2]}, ${dateData[3]}`)\n  }\n\n  const handlePriority = (event) => {\n    setPriority(event.target.value)\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    setTasks([...tasks, {\n      task: taskTitle,\n      date: date,\n      priority: priority,\n      status: false\n    }])\n    closeModal();\n  }\n\n  console.log(date)\n\n    return (\n      <div className=\"Tasks\">\n        <Form onSubmit={handleSubmit} >\n          <TaskData className='taskDate'>\n            <label htmlFor='taskDate'>Due Date: </label>\n\n            <DatePicker\n              selected={startDate}\n              onSelect={handleDueDate}\n              onChange={date => setStartDate(date)}\n              isClearable\n            />\n\n          </TaskData>\n          <TaskData className='taskName'>\n            <label htmlFor='task'>Task: </label>\n            <input\n              type='text'\n              id='taskName'\n              onChange={handleTaskTitle}\n            />\n          </TaskData>\n          <TaskData className='taskPriority'>\n            <label htmlFor='taskPriority'>Priority: </label>\n            <input\n              type='radio'\n              id='taskPriority'\n              name='priority'\n              onChange={handlePriority}\n              value=\"Low\"\n            /> Low\n            <input\n              type='radio'\n              id='taskPriority'\n              name='priority'\n              onChange={handlePriority}\n              value=\"Medium\"\n            /> Medium\n            <input\n              type='radio'\n              id='taskPriority'\n              name='priority'\n              onChange={handlePriority}\n              value=\"High\"\n            /> High\n          </TaskData>\n          <input type=\"submit\" value='Save' />\n        </Form>\n      </div>\n    );\n}\n\nexport default TaskModal;","/home/jeffreylee/Documents/codingChallenges/Creative-Softwares-Challenge/to-do/src/container/App/AppStyles.js",[],"/home/jeffreylee/Documents/codingChallenges/Creative-Softwares-Challenge/to-do/src/components/TaskList/TaskListStyle.js",[],"/home/jeffreylee/Documents/codingChallenges/Creative-Softwares-Challenge/to-do/src/components/CurrentDate/CurrentDateStyle.js",[],"/home/jeffreylee/Documents/codingChallenges/Creative-Softwares-Challenge/to-do/src/components/OpenTasks/OpenTaskStyle.js",[],"/home/jeffreylee/Documents/codingChallenges/Creative-Softwares-Challenge/to-do/src/components/Task/TaskStyle.js",[],"/home/jeffreylee/Documents/codingChallenges/Creative-Softwares-Challenge/to-do/src/components/TaskModal/TaskModalStyle.js",[],{"ruleId":"71","severity":1,"message":"72","line":15,"column":3,"nodeType":"73","endLine":15,"endColumn":12,"suggestions":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":13,"column":9,"nodeType":"73","messageId":"81","endLine":13,"endColumn":21},{"ruleId":"79","severity":1,"message":"82","line":5,"column":41,"nodeType":"73","messageId":"81","endLine":5,"endColumn":46},{"ruleId":"79","severity":1,"message":"83","line":5,"column":48,"nodeType":"73","messageId":"81","endLine":5,"endColumn":56},{"ruleId":"79","severity":1,"message":"84","line":7,"column":10,"nodeType":"73","messageId":"81","endLine":7,"endColumn":13},{"ruleId":"79","severity":1,"message":"85","line":7,"column":15,"nodeType":"73","messageId":"81","endLine":7,"endColumn":21},{"ruleId":"79","severity":1,"message":"86","line":4,"column":10,"nodeType":"73","messageId":"81","endLine":4,"endColumn":24},{"ruleId":"79","severity":1,"message":"87","line":12,"column":10,"nodeType":"73","messageId":"81","endLine":12,"endColumn":19},{"ruleId":"79","severity":1,"message":"88","line":12,"column":21,"nodeType":"73","messageId":"81","endLine":12,"endColumn":31},{"ruleId":"79","severity":1,"message":"89","line":13,"column":9,"nodeType":"73","messageId":"81","endLine":13,"endColumn":21},{"ruleId":"79","severity":1,"message":"90","line":14,"column":9,"nodeType":"73","messageId":"81","endLine":14,"endColumn":15},"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setListView'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [listView] as a second argument to the useEffect Hook.","Identifier",["91"],"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-unused-vars","'handleUpdate' is assigned a value but never used.","unusedVar","'tasks' is assigned a value but never used.","'setTasks' is assigned a value but never used.","'job' is assigned a value but never used.","'setJob' is assigned a value but never used.","'ModalContainer' is defined but never used.","'calIsOpen' is assigned a value but never used.","'setCalOpen' is assigned a value but never used.","'calButtonRef' is assigned a value but never used.","'calRef' is assigned a value but never used.",{"desc":"94","fix":"95"},"no-global-assign","no-unsafe-negation","Add dependencies array: [listView]",{"range":"96","text":"97"},[858,858],", [listView]"]