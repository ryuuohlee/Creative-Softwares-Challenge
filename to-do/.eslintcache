[{"/home/jeffreylee/Documents/codingChallenges/Creative-Softwares-Challenge/to-do/src/index.js":"1","/home/jeffreylee/Documents/codingChallenges/Creative-Softwares-Challenge/to-do/src/container/App/App.js":"2","/home/jeffreylee/Documents/codingChallenges/Creative-Softwares-Challenge/to-do/src/components/CurrentDate/CurrentDate.js":"3","/home/jeffreylee/Documents/codingChallenges/Creative-Softwares-Challenge/to-do/src/components/OpenTasks/OpenTasks.js":"4","/home/jeffreylee/Documents/codingChallenges/Creative-Softwares-Challenge/to-do/src/components/TaskList/TaskList.js":"5","/home/jeffreylee/Documents/codingChallenges/Creative-Softwares-Challenge/to-do/src/components/Task/Task.js":"6","/home/jeffreylee/Documents/codingChallenges/Creative-Softwares-Challenge/to-do/src/components/TaskModal/TaskModal.js":"7","/home/jeffreylee/Documents/codingChallenges/Creative-Softwares-Challenge/to-do/src/container/App/AppStyles.js":"8","/home/jeffreylee/Documents/codingChallenges/Creative-Softwares-Challenge/to-do/src/components/TaskList/TaskListStyle.js":"9","/home/jeffreylee/Documents/codingChallenges/Creative-Softwares-Challenge/to-do/src/components/CurrentDate/CurrentDateStyle.js":"10","/home/jeffreylee/Documents/codingChallenges/Creative-Softwares-Challenge/to-do/src/components/OpenTasks/OpenTaskStyle.js":"11","/home/jeffreylee/Documents/codingChallenges/Creative-Softwares-Challenge/to-do/src/components/Task/TaskStyle.js":"12","/home/jeffreylee/Documents/codingChallenges/Creative-Softwares-Challenge/to-do/src/components/TaskModal/TaskModalStyle.js":"13"},{"size":5911,"mtime":1611875532341,"results":"14","hashOfConfig":"15"},{"size":1498,"mtime":1611906605575,"results":"16","hashOfConfig":"15"},{"size":1375,"mtime":1611884744627,"results":"17","hashOfConfig":"15"},{"size":432,"mtime":1611889531676,"results":"18","hashOfConfig":"15"},{"size":2166,"mtime":1611954290943,"results":"19","hashOfConfig":"15"},{"size":1239,"mtime":1611904691334,"results":"20","hashOfConfig":"15"},{"size":2663,"mtime":1611957040593,"results":"21","hashOfConfig":"15"},{"size":234,"mtime":1611947680743,"results":"22","hashOfConfig":"15"},{"size":645,"mtime":1611903481221,"results":"23","hashOfConfig":"15"},{"size":543,"mtime":1611884937681,"results":"24","hashOfConfig":"15"},{"size":610,"mtime":1611902751212,"results":"25","hashOfConfig":"15"},{"size":833,"mtime":1611904662099,"results":"26","hashOfConfig":"15"},{"size":211,"mtime":1611953919728,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"bxrhd3",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/home/jeffreylee/Documents/codingChallenges/Creative-Softwares-Challenge/to-do/src/index.js",[],["57","58"],"/home/jeffreylee/Documents/codingChallenges/Creative-Softwares-Challenge/to-do/src/container/App/App.js",["59"],"import React, { useState, useEffect } from 'react';\nimport CurrentDate from '../../components/CurrentDate/CurrentDate.js';\nimport OpenTasks from '../../components/OpenTasks/OpenTasks.js';\nimport TaskList from '../../components/TaskList/TaskList.js'\nimport { AppStyle, Filter } from './AppStyles.js'\n\n\nconst App = () => {\n  const date = new Date();\n  const dateParse = date.toString().split(' ');\n  const [taskList, setTasks] = useState([{task:'task 1', priority:'Low', date:'Nov 7th, 2020', status: false}, {task:'task 2', priority:'Medium', date:'Nov 8th, 2020', status: false}, {task:'task 3', priority:'High', date:'Nov 9th, 2020', status: true}])\n  const openTasks = taskList.filter(task => !task.status).length;\n  const [listView, setListView] = useState(false);\n\n  useEffect(() => {\n    setListView(listView);\n  })\n\n  const handleListView = (event) => {\n    if(event.target.outerText===\"Pending\") {\n      setListView(false)\n    }\n    else {\n      setListView(true)\n    }\n  }\n\n    return (\n      <AppStyle className=\"App\">\n        <div className=\"filterControl\">\n          <Filter onClick={handleListView} value=\"Pending\">Pending</Filter><Filter onClick={handleListView} value=\"Pending\">Completed</Filter>\n          <div>\n            <TaskList tasks={taskList} view={listView} setTasks={setTasks} />\n          </div>\n        </div>\n        <div>\n          <CurrentDate date={dateParse} />\n          <OpenTasks open={openTasks} />\n        </div>\n      </AppStyle>\n    );\n}\n\nexport default App;\n","/home/jeffreylee/Documents/codingChallenges/Creative-Softwares-Challenge/to-do/src/components/CurrentDate/CurrentDate.js",[],"/home/jeffreylee/Documents/codingChallenges/Creative-Softwares-Challenge/to-do/src/components/OpenTasks/OpenTasks.js",[],"/home/jeffreylee/Documents/codingChallenges/Creative-Softwares-Challenge/to-do/src/components/TaskList/TaskList.js",[],"/home/jeffreylee/Documents/codingChallenges/Creative-Softwares-Challenge/to-do/src/components/Task/Task.js",["60"],"import React from 'react';\nimport { TaskContainer, Low, Medium, High } from './TaskStyle.js';\n\nconst Task = (props) => {\n  const { date, priority, status, task } = props;\n    return (\n      <TaskContainer className=\"Tasks\">\n        <div className=\"stats\">\n          <div className=\"classState\">\n            <input\n              type=\"checkbox\"\n            />\n          </div>\n          <div className=\"classLabel\">\n            {task}\n          </div>\n          <div className=\"classLabel\">\n            {date}\n          </div>\n        </div>\n        <div>\n          {priority==='Low' ?\n            <div>\n              <Low>Low</Low>\n              <p>Medium</p>\n              <p>High</p>\n            </div>\n            : (priority==='Medium' ?\n            <div>\n              <p>Low</p>\n              <Medium>Medium</Medium>\n              <p>High</p>\n            </div>\n            : (priority==='High'?\n            <div>\n              <p>Low</p>\n              <p>Medium</p>\n              <High>High</High>\n            </div>\n            :\n            <div>\n              <p>Low</p>\n              <p>Medium</p>\n              <p>High</p>\n            </div>\n             ))}\n        </div>\n      </TaskContainer>\n    );\n}\n\nexport default Task;","/home/jeffreylee/Documents/codingChallenges/Creative-Softwares-Challenge/to-do/src/components/TaskModal/TaskModal.js",["61","62","63","64","65"],"/home/jeffreylee/Documents/codingChallenges/Creative-Softwares-Challenge/to-do/src/container/App/AppStyles.js",[],"/home/jeffreylee/Documents/codingChallenges/Creative-Softwares-Challenge/to-do/src/components/TaskList/TaskListStyle.js",[],"/home/jeffreylee/Documents/codingChallenges/Creative-Softwares-Challenge/to-do/src/components/CurrentDate/CurrentDateStyle.js",[],"/home/jeffreylee/Documents/codingChallenges/Creative-Softwares-Challenge/to-do/src/components/OpenTasks/OpenTaskStyle.js",[],"/home/jeffreylee/Documents/codingChallenges/Creative-Softwares-Challenge/to-do/src/components/Task/TaskStyle.js",[],"/home/jeffreylee/Documents/codingChallenges/Creative-Softwares-Challenge/to-do/src/components/TaskModal/TaskModalStyle.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":15,"column":3,"nodeType":"72","endLine":15,"endColumn":12,"suggestions":"73"},{"ruleId":"74","severity":1,"message":"75","line":5,"column":27,"nodeType":"72","messageId":"76","endLine":5,"endColumn":33},{"ruleId":"74","severity":1,"message":"77","line":4,"column":10,"nodeType":"72","messageId":"76","endLine":4,"endColumn":24},{"ruleId":"74","severity":1,"message":"78","line":12,"column":10,"nodeType":"72","messageId":"76","endLine":12,"endColumn":19},{"ruleId":"74","severity":1,"message":"79","line":12,"column":21,"nodeType":"72","messageId":"76","endLine":12,"endColumn":31},{"ruleId":"74","severity":1,"message":"80","line":13,"column":9,"nodeType":"72","messageId":"76","endLine":13,"endColumn":21},{"ruleId":"74","severity":1,"message":"81","line":14,"column":9,"nodeType":"72","messageId":"76","endLine":14,"endColumn":15},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setListView'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [listView] as a second argument to the useEffect Hook.","Identifier",["84"],"no-unused-vars","'status' is assigned a value but never used.","unusedVar","'ModalContainer' is defined but never used.","'calIsOpen' is assigned a value but never used.","'setCalOpen' is assigned a value but never used.","'calButtonRef' is assigned a value but never used.","'calRef' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},"Add dependencies array: [listView]",{"range":"87","text":"88"},[819,819],", [listView]"]